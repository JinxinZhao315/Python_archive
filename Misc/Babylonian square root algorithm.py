#Babylonian square root algorithm:
#The user provides three inputs: an integer number to find the square of, an integer initial guess, and a floating-point tolerance.
#When the difference between two successive answers generated by the algorithm differs by a value less than the provided tolerance, the algorithm finishes.

#(a)Guess the square root of the number.
#(b) Divide the number by the guess.
#(c) Average the quotient (from step b) and the guess.
#(d) Make the new guess the average from step c.
#(e) If the new guess differs from the previous guess by more than the specified tolerance, go back to step b; otherwise, stop.

number=int(input("Type the integer you want to find the square root to:"))
guess_initial=int(input("Type the initial integer square root guess:"))
guess = guess_initial  # This is just to make sure we still have the value of initial guess after running the program
tolerance=float(input("Type the floating-point tolerance:"))
quotient=float(number/guess)
average_newguess=float((quotient+guess)/2) #which means the average now become the new guess
count=0


while abs(average_newguess - guess) > tolerance:
    guess=average_newguess   #The second guess now become the "previous guess"
    quotient=float(number/average_newguess)  # The quotient becomes the new quotient
    average_newguess=float((quotient+guess)/2)  #This is the third guess, which is now to be compared with the second guess/"previous guess"
    count += 1
else:
    print("The square root of",number,"is",average_newguess,".")
    print("when the tolerance is",tolerance,".")
    print("When the initial guess is",guess_initial,", the number of counts to get the square root is",count,".")
    
    

